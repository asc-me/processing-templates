{"name":"PAN-NGFW-Config-v1","config":{"Name":"lua","match":"*","code":"cb_filter=require('calyptia.pr')([====================[[{\"type\":\"parse\",\"opts\":{\"src\":\"log\",\"dst\":\"parsed\",\"regex\":\"(?<future_use1>[^,]*),(?<receive_time>[^,]+),(?<serial_number>[^,]*),(?<type>CONFIG),(?<subtype>[^,]+),(?<future_use2>[^,]*),(?<generated_time>[^,]+),(?<host>[^,]+),(?<virtual_system>[^,]*),(?<command>[^,]+),(?<admin>[^,]+),(?<client>[^,]+),(?<result>[^,]+),(?<configuration_path>[^,]+),(?<before_change_detail>(\\\"[^\\\\\\\"]*\\\"|[^,]*)),(?<after_change_detail>(\\\"[^\\\\\\\"]*\\\"|[^,]*)),(?<sequence_number>[^,]+),(?<action_flags>[^,]+),(?<dev_grp_level_1>[^,]+),(?<dev_grp_level_2>[^,]+),(?<dev_grp_level_3>[^,]+),(?<dev_grp_level_4>[^,]+),(?<virtual_system_name>[^,]*),(?<device_name>[^,]+),(?<device_group>[^,]+)\",\"regexEngine\":\"pcre2\"},\"comment\":\"PAN Config v10\",\"id\":\"09a78e00-a7fe-48b9-b033-1bf1486b0e79\",\"active\":true},{\"type\":\"flatten\",\"opts\":{\"key\":\"parsed\",\"regex\":\"^.+$\",\"keyReplacement\":\"%1\",\"keepOrig\":false},\"comment\":\"\",\"id\":\"75f3e442-a251-490d-80be-d3a95a82763e\",\"active\":true},{\"type\":\"custom_script\",\"opts\":{\"script\":\"return function(tag, ts, record)\\n    for k, v in pairs(record) do\\n        -- check if the value is empty\\n        if v == '' then\\n            -- delete the key\\n            record[k] = nil\\n        end\\n    end\\n    return 1, ts, record\\nend\\n\\n\\n\\n\\n\\n\\n\"},\"comment\":\"remove all keys that have empty values\",\"id\":\"fe010bc5-0459-4b7b-966e-a6696172bd76\",\"active\":true},{\"type\":\"block_keys\",\"opts\":{\"regex\":\"month|day|http|log|csv|time|future_use\",\"matchCase\":false,\"regexEngine\":\"pcre2\",\"nestedPath\":\"\"},\"comment\":\"remove original event and wrapper\",\"id\":\"daf7b885-10f8-41e9-b137-2b2c2e8d8dbb\",\"active\":true},{\"type\":\"custom_script\",\"opts\":{\"script\":\"return function(tag, ts, record)\\n    for k, v in pairs(record) do\\n        -- check if the key contains \\\"source\\\"\\n        if string.match(k, \\\"source\\\") ~= nil then\\n            -- rename the key\\n            record[k:gsub(\\\"source\\\", \\\"src\\\")] = v\\n            -- delete the old key\\n            record[k] = nil\\n        end\\n    end\\n\\n    for k, v in pairs(record) do\\n        -- check if the key contains \\\"source\\\"\\n        if string.match(k, \\\"destination\\\") ~= nil then\\n            -- rename the key\\n            record[k:gsub(\\\"destination\\\", \\\"dest\\\")] = v\\n            -- delete the old key\\n            record[k] = nil\\n        end\\n    end\\n\\n    for k, v in pairs(record) do\\n        -- check if the key contains \\\"source\\\"\\n        if string.match(k, \\\"virtual\\\") ~= nil then\\n            -- rename the key\\n            record[k:gsub(\\\"virtual\\\", \\\"vrt\\\")] = v\\n            -- delete the old key\\n            record[k] = nil\\n        end\\n    end\\n\\n    for k, v in pairs(record) do\\n        -- check if the key contains \\\"source\\\"\\n        if string.match(k, \\\"system\\\") ~= nil then\\n            -- rename the key\\n            record[k:gsub(\\\"system\\\", \\\"sys\\\")] = v\\n            -- delete the old key\\n            record[k] = nil\\n        end\\n    end\\n\\n    for k, v in pairs(record) do\\n        -- check if the key contains \\\"source\\\"\\n        if string.match(k, \\\"application\\\") ~= nil then\\n            -- rename the key\\n            record[k:gsub(\\\"application\\\", \\\"app\\\")] = v\\n            -- delete the old key\\n            record[k] = nil\\n        end\\n    end\\n    for k, v in pairs(record) do\\n        -- check if the key contains \\\"source\\\"\\n        if string.match(k, \\\"packets\\\") ~= nil then\\n            -- rename the key\\n            record[k:gsub(\\\"packets\\\", \\\"pkts\\\")] = v\\n            -- delete the old key\\n            record[k] = nil\\n        end\\n    end\\n  \\n    return 1, ts, record\\nend\"},\"comment\":\"Rename fields that contain \\\"source\\\" to \\\"src\\\"\",\"id\":\"c1f967d7-21ff-4d09-96cb-597a9fe839c0\",\"active\":true},{\"type\":\"block_keys\",\"opts\":{\"regex\":\"src_country|dst_country|action_flags|rule_uuid\",\"matchCase\":false,\"regexEngine\":\"pcre2\",\"nestedPath\":\"\"},\"comment\":\"\",\"id\":\"61a72d39-f5d4-4cb7-97f7-412bd4379eb7\",\"active\":true},{\"type\":\"custom_script\",\"opts\":{\"script\":\"return function(tag, ts, record)\\n    for k, v in pairs(record) do\\n        -- check if the value is \\\"0\\\"\\n        if v == \\\"0\\\" then\\n            -- delete the field\\n            record[k] = nil\\n        end\\n    end\\n    return 1, ts, record\\nend\"},\"comment\":\"if field value is \\\"0\\\" then remove the field\",\"id\":\"2908b07f-c20e-4853-bf2d-bfd675c45a75\",\"active\":true},{\"type\":\"custom_script\",\"opts\":{\"script\":\"return function(tag, ts, record)\\n    -- check if Tunnel_Type is equal to \\\"N/A\\\"\\n    if record['tunnel_type'] == 'N/A' then\\n        -- delete Tunnel_Type\\n        record['tunnel_type'] = nil\\n        -- delete Tunnel_ID\\n        record['tunnel_id'] = nil\\n        -- delete Tunneled_app\\n        record['tunneled_app'] = nil\\n    end\\n    return 1, ts, record\\nend\"},\"comment\":\"if Tunnel_Type has the value \\\"N/A\\\" then delete Tunnel_Type and Tunnel_ID fields\",\"id\":\"5318c192-b44f-402d-ada1-c4d52b558353\",\"active\":true},{\"type\":\"custom_script\",\"opts\":{\"script\":\"return function(tag, ts, record)\\n    -- check if app_Subcategory is equal to app_Category\\n    if record['app_subcategory'] == record['app_category'] then\\n        -- delete app_Subcategory\\n        record['app_subcategory'] = nil\\n    end\\n    return 1, ts, record\\nend\"},\"comment\":\"if app_Subcategory is equal to app_Category then delete app_Subcategory\",\"id\":\"848effb9-958b-4879-bd04-745ee0e53e00\",\"active\":true}]]====================])","call":"cb_filter"},"input":"1,2021/10/25 20:25:39,,CONFIG,0,2561,2021/10/25 20:25:39,81.2.69.193,,set,admin,Web,Succeeded, config shared log-settings iptag match-list  ip-tag,,\"iptag { match-list { ip-tag  { send-syslog [ SYSLOG-1 ]; filter \"\"All Logs\"\"; } } } \",1234567890,0x0,0,0,0,0,,PA-VM,0,\n1,2021/10/25 20:25:19,,CONFIG,0,2561,2021/10/25 20:25:19,81.2.69.193,,set,admin,Web,Succeeded, config shared log-settings globalprotect match-list  globalProtect,,\"globalprotect { match-list { globalProtect  { send-syslog [ SYSLOG-1 ]; filter \"\"All Logs\"\"; } } } \",1234567890,0x0,0,0,0,0,,PA-VM,0,\n1,2023/10/04 08:52:10,007058000248010,CONFIG,0,2816,2023/10/04 08:52:10,81.2.69.193,,set,admin,Web,Succeeded, vsys  vsys1 rulebase security rules  reset-adult,,reset-adult 73a06abf-75ca-436f-9319-1a15b27fa692 { to [ public ]; from [ private ]; source [ any ]; destination [ any ]; source-user [ any ]; category [ adult ]; application [ any ]; service [ application-default ]; source-hip [ any ]; destination-hip [ any ]; action reset-client; icmp-unreachable yes; log-start yes; rule-type interzone; } ,7286123782408765488,0x0,0,0,0,0,,PA-VM,0,\n1,2023/10/04 08:50:28,007058000248010,CONFIG,0,2816,2023/10/04 08:50:28,81.2.69.193,,move,admin,Web,Succeeded, vsys  vsys1 rulebase security rules  block-1.1.1.1,,,7286123782408765487,0x0,0,0,0,0,,PA-VM,0,\n1,2023/10/04 08:27:38,007058000248010,CONFIG,0,2816,2023/10/04 08:27:38,81.2.69.193,,override,admin,Web,Failed, deviceconfig system device-telemetry,,,7286123782408765440,0x0,0,0,0,0,,PA-VM,0,","isRawInput":true,"pipelineVersion":"24.10.0"}